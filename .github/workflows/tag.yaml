name: Tag And Bump Version

on:
  push:
    branches:
      - main
      - master

permissions:
  contents: write
  actions: write
  deployments: write

jobs:
  deployToProd:
    uses: trungntm/github-workflow-support/.github/workflows/buildAndDeployToVercel.yaml@master
    with:
      env: production
    secrets:
      vercel_token: ${{ secrets.VERCEL_TOKEN }}
      vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
      vercel_project_id: ${{ secrets.VERCEL_PROJECT_ID }}

  buildTagAndBumpVersion:
    name: Build, Tag, and Bump Version
    needs: [deployToProd]
    runs-on: ubuntu-latest
    if: success() || (!cancelled() && !failure())
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check release version
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "current_version=$VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $VERSION"

          # Get the latest tag (if any) for changelog generation
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          echo "previous_tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT
          echo "Previous tag: $PREVIOUS_TAG"

      - name: Create release tag
        id: create_tag
        run: |
          VERSION=${{ steps.get_version.outputs.current_version }}
          TAG_NAME="v$VERSION"

          # Check if tag already exists
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "Tag $TAG_NAME already exists, skipping tag creation"
            echo "tag_created=false" >> $GITHUB_OUTPUT
          else
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git tag -a "$TAG_NAME" -m "Release version $VERSION"
            git push origin "$TAG_NAME"
            echo "tag_created=true" >> $GITHUB_OUTPUT
            echo "Created and pushed tag: $TAG_NAME"
          fi
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Checkout develop
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: Create GitHub Release (auto-generated notes)
        if: steps.create_tag.outputs.tag_created == 'true'
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.tag_name }}
          name: Release ${{ steps.create_tag.outputs.tag_name }}
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Bump minor version
        id: increment_version
        run: |
          # Get current version components
          CURRENT_VERSION=${{ steps.get_version.outputs.current_version }}

          # Split version into parts (assuming semantic versioning)
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}

          # Increment minor version and reset patch to 0
          NEW_MINOR=$((MINOR + 1))
          NEW_VERSION="${MAJOR}.${NEW_MINOR}.0"

          echo "Incrementing version from $CURRENT_VERSION to $NEW_VERSION"

          # Update package.json
          npm version $NEW_VERSION --no-git-tag-version

          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit version increment
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "chore: bump version to ${{ steps.increment_version.outputs.new_version }}"
          git push origin develop

      - name: Release Summary
        run: |
          echo "🎉 Release Pipeline Completed Successfully!"
          echo "=================================="
          echo "📦 Built version: ${{ steps.get_version.outputs.current_version }}"
          echo "🏷️  Created tag: ${{ steps.create_tag.outputs.tag_name }}"
          echo "🚀 Deployed to production"
          echo "=================================="
